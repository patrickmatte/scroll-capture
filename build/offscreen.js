(()=>{"use strict";function e(e){return e<10?"0"+e:e.toString()}function t(t){let o=t.getHours(),a=o>=12?"pm":"am";return o%=12,o=o||12,{hours:o,minutes:e(t.getMinutes()),seconds:e(t.getSeconds()),ampm:a}}let o;function a(){let o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Scroll Capture",a=new Date,i=t(a),r=a.getFullYear(),s=e(a.getMonth()+1),n=e(a.getDate());return i.ampm=i.ampm.toUpperCase(),`${o} ${r}-${s}-${n} at ${i.hours}.${i.minutes}.${i.seconds} ${i.ampm}`}let i,r,s=[];const n=FFmpeg.createFFmpeg({corePath:chrome.runtime.getURL("ffmpeg-core.js"),log:!0,mainName:"main"});n.setProgress((e=>{console.log("progress:",e)})),n.setLogger((e=>{switch(e.type){case"fferr":case"ffout":const t={type:"scrollCaptureFFmpegLogToSW",logType:e.type,message:e.message,tabId:r};chrome.runtime.sendMessage(t)}})),chrome.runtime.onMessage.addListener((e=>{if("offscreen"===e.target)switch(e.type){case"scrollCaptureStartOffscreenRecording":!async function(e){if("recording"===o?.state)throw new Error("Called startRecording while recording is in progress.");console.log("startRecording",JSON.stringify(e));const t={x:e.tabWidth,y:e.tabHeight},c=e.pixelRatio,d={},m=[{width:t.x,height:t.y},{width:t.x*e.zoomLevel,height:t.y*e.zoomLevel},{width:t.x*c,height:t.y*c}];m.sort(((e,t)=>e.width*e.height-t.width*t.height)),console.log("constraintSizes",m),e.exportVideo&&(d.video={mandatory:{chromeMediaSource:"tab",chromeMediaSourceId:e.streamId,minWidth:m[0].width,minHeight:m[0].height,maxWidth:m[2].width,maxHeight:m[2].height,minFrameRate:30,maxFrameRate:60}});e.exportAudio&&(d.audio={mandatory:{chromeMediaSource:"tab",chromeMediaSourceId:e.streamId}});let g,l;console.log("navigator.mediaDevices.getUserMedia",JSON.stringify(d));try{g=await navigator.mediaDevices.getUserMedia(d)}catch(e){console.log("navigator.mediaDevices.getUserMedia error",e)}if(console.log("media=",g),e.exportAudio){const e=new AudioContext;e.createMediaStreamSource(g).connect(e.destination)}e.exportVideo?(l="video/webm;codecs=h264",e.exportAudio&&(l+=",opus")):l="audio/webm;codecs=opus";let p=e.videoBitsPerSecond||16,h=e.audioBitsPerSecond||128;const u={mimeType:l,audioBitsPerSecond:1e3*h,videoBitsPerSecond:1e6*p};console.log("MediaRecorder",JSON.stringify(u)),o=new MediaRecorder(g,u),o.ondataavailable=e=>s.push(e.data),o.onstop=()=>{console.log("data=",s);const t=l.split(";")[0];console.log("blobFormat=",t),i=new Blob(s,{type:t}),console.log("blob=",i),function(e,t){r=t.tabId;var o=new FileReader;o.onload=async function(){let e,o="sample_video.webm",i="sample_video.mp4",r="mp4";t.exportVideo?e=t.exportAudio?`ffmpeg -i ${o} -c:v copy -c:a aac ${i}`:`ffmpeg -i ${o} -c:v copy ${i}`:(r="m4a",i="sample_video.m4a",e=`ffmpeg -i ${o} -c:a aac ${i}`);const s=`${a()}.${r}`,c=await async function(e,t,o,a){n.isLoaded()&&await n.exit();await n.load();const i=o.split(" ");if("ffmpeg"!==i.shift())return void alert("Please start with ffmpeg");n.FS("writeFile",e,await FFmpeg.fetchFile(a)),await n.run(...i);const r=n.FS("readFile",t),s=new Blob([r.buffer]);return s}(o,i,e,new Uint8Array(this.result)),d={type:"scrollCaptureVideoURLBackground",videoURL:URL.createObjectURL(c),fileName:s,tabId:t.tabId,mimeType:`video/${r}`};chrome.runtime.sendMessage(d)},o.readAsArrayBuffer(e)}(i,e),s=[]},o.start(),window.location.hash="recording"}(e);break;case"scrollCaptureStopOffscreenRecording":o.stop(),o.stream.getTracks().forEach((e=>e.stop())),o=void 0,window.location.hash="";break;default:throw new Error("Unrecognized message:",e.type)}}))})();