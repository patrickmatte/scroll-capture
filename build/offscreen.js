(()=>{"use strict";function e(e){return e<10?"0"+e:e.toString()}function t(t){let o=t.getHours(),a=o>=12?"pm":"am";return o%=12,o=o||12,{hours:o,minutes:e(t.getMinutes()),seconds:e(t.getSeconds()),ampm:a}}function o(){let o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Scroll Capture",a=new Date,i=t(a),r=a.getFullYear(),n=e(a.getMonth()+1),s=e(a.getDate());return i.ampm=i.ampm.toUpperCase(),`${o} ${r}-${n}-${s} at ${i.hours}.${i.minutes}.${i.seconds} ${i.ampm}`}const{createFFmpeg:a,fetchFile:i}=FFmpeg,r=a({corePath:chrome.runtime.getURL("ffmpeg-core.js"),log:!0,mainName:"main"});let n;chrome.runtime.onMessage.addListener((e=>{if("offscreen"===e.target)switch(e.type){case"scrollCaptureStartOffscreenRecording":d(e);break;case"scrollCaptureStopOffscreenRecording":n.stop(),n.stream.getTracks().forEach((e=>e.stop())),n=void 0,window.location.hash="";break;default:throw new Error("Unrecognized message:",e.type)}}));let s,c=[];async function d(e){if("recording"===n?.state)throw new Error("Called startRecording while recording is in progress.");console.log(d,e);const t=e.tabWidth,a=e.tabHeight,m=e.pixelRatio,l={};e.exportVideo&&(l.video={mandatory:{chromeMediaSource:"tab",chromeMediaSourceId:e.streamId,minWidth:t*m,maxWidth:t*m,minHeight:a*m,maxHeight:a*m,minFrameRate:30,maxFrameRate:60}}),e.exportAudio&&(l.audio={mandatory:{chromeMediaSource:"tab",chromeMediaSourceId:e.streamId}}),console.log("getUserMedia constraints",JSON.stringify(l));const p=await navigator.mediaDevices.getUserMedia(l);if(e.exportAudio){const e=new AudioContext;e.createMediaStreamSource(p).connect(e.destination)}let u;e.exportVideo?(u="video/webm;codecs=h264",e.exportAudio&&(u+=",opus")):u="audio/webm;codecs=opus",console.log();let g=e.videoBitsPerSecond||16,f=e.audioBitsPerSecond||128;const h={mimeType:u,audioBitsPerSecond:1e3*f,videoBitsPerSecond:1e6*g};console.log("MediaRecorder options",JSON.stringify(h)),n=new MediaRecorder(p,h),n.ondataavailable=e=>c.push(e.data),n.onstop=()=>{const t=u.split(";")[0];s=new Blob(c,{type:t}),function(e,t){var a=new FileReader;a.onload=async function(){let e,a="sample_video.webm",n="sample_video.mp4",s="mp4";t.exportVideo?e=t.exportAudio?`ffmpeg -i ${a} -c:v copy -c:a aac ${n}`:`ffmpeg -i ${a} -c:v copy ${n}`:(s="m4a",n="sample_video.m4a",e=`ffmpeg -i ${a} -c:a aac ${n}`);const c=`${o()}.${s}`,d=await async function(e,t,o,a){r.isLoaded()&&await r.exit();await r.load();const n=o.split(" ");if("ffmpeg"!==n.shift())return void alert("Please start with ffmpeg");r.FS("writeFile",e,await i(a)),console.log(n),await r.run(...n);const s=r.FS("readFile",t),c=new Blob([s.buffer]);return c}(a,n,e,new Uint8Array(this.result));var m=new File([d],c,{type:`video/${s}`});const l=Object.assign({},t);Object.assign(l,{type:"scrollCaptureVideoURL",videoURL:URL.createObjectURL(m),fileName:c}),console.log("videoURLMessage.videoURL",l.videoURL),chrome.runtime.sendMessage(l)},a.readAsArrayBuffer(e)}(s,e),c=[]},n.start(),window.location.hash="recording"}})();