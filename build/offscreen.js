(()=>{"use strict";function e(e){return e<10?"0"+e:e.toString()}function o(o){let t=o.getHours(),a=t>=12?"pm":"am";return t%=12,t=t||12,{hours:t,minutes:e(o.getMinutes()),seconds:e(o.getSeconds()),ampm:a}}function t(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Scroll Capture",a=new Date,i=o(a),r=a.getFullYear(),n=e(a.getMonth()+1),s=e(a.getDate());return i.ampm=i.ampm.toUpperCase(),`${t} ${r}-${n}-${s} at ${i.hours}.${i.minutes}.${i.seconds} ${i.ampm}`}const{createFFmpeg:a,fetchFile:i}=FFmpeg,r=a({corePath:chrome.runtime.getURL("ffmpeg-core.js"),log:!0,mainName:"main"});let n;chrome.runtime.onMessage.addListener((e=>{if("offscreen"===e.target)switch(e.type){case"scrollCaptureStartOffscreenRecording":d(e);break;case"scrollCaptureStopOffscreenRecording":n.stop(),n.stream.getTracks().forEach((e=>e.stop())),n=void 0,window.location.hash="";break;default:throw new Error("Unrecognized message:",e.type)}}));let s,c=[];async function d(e){if("recording"===n?.state)throw new Error("Called startRecording while recording is in progress.");console.log(d,e);const o=e.tabWidth,a=e.tabHeight,l=e.pixelRatio,m={};e.exportVideo&&(m.video={mandatory:{chromeMediaSource:"tab",chromeMediaSourceId:e.streamId,minWidth:o*l,maxWidth:o*l,minHeight:a*l,maxHeight:a*l,minFrameRate:30,maxFrameRate:60}}),e.exportAudio&&(m.audio={mandatory:{chromeMediaSource:"tab",chromeMediaSourceId:e.streamId}}),console.log("getUserMedia constraints",JSON.stringify(m));const p=await navigator.mediaDevices.getUserMedia(m);if(e.exportAudio){const e=new AudioContext;e.createMediaStreamSource(p).connect(e.destination)}let u;e.exportVideo?(u="video/webm;codecs=h264",e.exportAudio&&(u+=",opus")):u="audio/webm;codecs=opus",console.log();let g=e.videoBitsPerSecond||16,f=e.audioBitsPerSecond||128;const h={mimeType:u,audioBitsPerSecond:1e3*f,videoBitsPerSecond:1e6*g};console.log("MediaRecorder options",JSON.stringify(h)),n=new MediaRecorder(p,h),n.ondataavailable=e=>c.push(e.data),n.onstop=()=>{const o=u.split(";")[0];s=new Blob(c,{type:o}),function(e,o){var a=new FileReader;a.onload=async function(){const e=t();console.log("fileName",e);let a,n="sample_video.webm",s="sample_video.mp4",c=`${e}.mp4`;o.exportVideo?a=o.exportAudio?`ffmpeg -i ${n} -c:v copy -c:a aac ${s}`:`ffmpeg -i ${n} -c:v copy ${s}`:(c=`${e}.m4a`,s="sample_video.m4a",a=`ffmpeg -i ${n} -c:a aac ${s}`),console.log("inputFileName",n),console.log("outputFileName",s);const d=await async function(e,o,t,a){r.isLoaded()&&await r.exit();await r.load();const n=t.split(" ");if("ffmpeg"!==n.shift())return void alert("Please start with ffmpeg");r.FS("writeFile",e,await i(a)),console.log(n),await r.run(...n);const s=r.FS("readFile",o),c=new Blob([s.buffer]);return c}(n,s,a,new Uint8Array(this.result));console.log("FFmpeg blob",d);const l=Object.assign({},o);Object.assign(l,{type:"scrollCaptureVideoURL",videoURL:URL.createObjectURL(d),fileName:c}),chrome.runtime.sendMessage(l)},a.readAsArrayBuffer(e)}(s,e),c=[]},n.start(),window.location.hash="recording"}})();